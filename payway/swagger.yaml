openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /auth/users/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomUser'
          description: ''
      tags:
      - auth
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreatePasswordRetype'
          description: ''
      tags:
      - auth
  /auth/users/me/:
    get:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - auth
    put:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - auth
    patch:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - auth
    delete:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - auth
  /auth/users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this User.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
      tags:
      - auth
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this User.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
      tags:
      - auth
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this User.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
      tags:
      - auth
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this User.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - auth
  /profiles/update-profile/:
    get:
      operationId: listGetUpdateProfiles
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - profiles
    put:
      operationId: updateGetUpdateProfile
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - profiles
  /auth/users/activation/:
    post:
      operationId: activationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
      tags:
      - auth
  /auth/users/resend_activation/:
    post:
      operationId: resendActivationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - auth
  /auth/users/reset_password/:
    post:
      operationId: resetPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - auth
  /auth/users/reset_password_confirm/:
    post:
      operationId: resetPasswordConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - auth
  /auth/users/reset_email/:
    post:
      operationId: resetUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - auth
  /auth/users/reset_email_confirm/:
    post:
      operationId: resetUsernameConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
      tags:
      - auth
  /auth/users/set_password/:
    post:
      operationId: setPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordRetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPasswordRetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPasswordRetype'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPasswordRetype'
          description: ''
      tags:
      - auth
  /auth/users/set_email/:
    post:
      operationId: setUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
      tags:
      - auth
  /auth/jwt/create/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - auth
  /auth/jwt/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - auth
  /auth/jwt/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - auth
components:
  schemas:
    CustomUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
        phone_number:
          type: string
          maxLength: 12
          minLength: 11
        first_name:
          type: string
          maxLength: 20
        last_name:
          type: string
          maxLength: 20
      required:
      - email
      - phone_number
      - first_name
      - last_name
    User:
      type: object
      properties:
        phone_number:
          type: string
          maxLength: 12
          minLength: 11
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
      required:
      - phone_number
    UserCreatePasswordRetype:
      type: object
      properties:
        phone_number:
          type: string
          maxLength: 12
          minLength: 11
        email:
          type: string
          format: email
          maxLength: 254
          minLength: 6
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
        re_password:
          type: string
      required:
      - phone_number
      - email
      - password
      - re_password
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - uid
      - token
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - uid
      - token
      - new_password
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          maxLength: 254
          minLength: 6
      required:
      - new_email
    SetPasswordRetype:
      type: object
      properties:
        new_password:
          type: string
        re_new_password:
          type: string
        current_password:
          type: string
      required:
      - new_password
      - re_new_password
      - current_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          maxLength: 254
          minLength: 6
      required:
      - current_password
      - new_email
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
